{
  "lm-studio": {
    "server": {
      "host": "127.0.0.1",
      "port": 1234,
      "endpoint": "http://127.0.0.1:1234/v1"
    },
    "models": {
      "deepseek-r1-distill-qwen-32b": {
        "name": "deepseek-r1-distill-qwen-32b",
        "description": "Primary game development model - excellent for game logic, mechanics, and real-time systems",
        "parameters": {
          "temperature": 0.7,
          "max_tokens": 4096,
          "top_p": 0.9,
          "frequency_penalty": 0.1,
          "presence_penalty": 0.1,
          "stop": ["</code>", "```", "\n\n\n", "// End of game logic"]
        },
        "specialties": [
          "game-mechanics",
          "game-architecture",
          "performance-optimization",
          "real-time-systems",
          "physics-simulation",
          "ai-behavior",
          "multiplayer-networking",
          "memory-management",
          "rendering-optimization"
        ],
        "game-frameworks": [
          "Unity C#",
          "Unreal Engine C++",
          "Godot GDScript",
          "WebGL JavaScript",
          "Three.js",
          "Phaser.js"
        ]
      },
      "openai-gpt-oss-20b": {
        "name": "openai/gpt-oss-20b",
        "description": "Creative game design model for UI/UX, narrative, and visual design",
        "parameters": {
          "temperature": 0.8,
          "max_tokens": 3072,
          "top_p": 0.95,
          "frequency_penalty": 0.0,
          "presence_penalty": 0.0,
          "stop": ["</design>", "```", "\n\n\n", "// End of design"]
        },
        "specialties": [
          "creative-design",
          "ui-ux-design",
          "game-narrative",
          "level-design",
          "asset-optimization",
          "user-experience",
          "game-balancing",
          "accessibility"
        ],
        "game-types": [
          "2D-platformer",
          "3D-first-person",
          "puzzle-games",
          "strategy-games",
          "racing-games",
          "mobile-games"
        ]
      },
      "text-embedding-nomic-embed-text-v1.5": {
        "name": "text-embedding-nomic-embed-text-v1.5",
        "description": "Embedding model for game code similarity and documentation retrieval",
        "specialties": [
          "code-similarity",
          "context-understanding",
          "semantic-search",
          "documentation-retrieval",
          "pattern-matching",
          "code-recommendations"
        ]
      }
    },
    "collaboration": {
      "enabled": true,
      "workflows": {
        "game-prototype": {
          "models": ["deepseek-r1-distill-qwen-32b", "openai/gpt-oss-20b"],
          "flow": [
            {
              "model": "deepseek-r1-distill-qwen-32b",
              "role": "game-architect",
              "prompt": "Let's design the game architecture, core mechanics, and technical implementation..."
            },
            {
              "model": "openai/gpt-oss-20b",
              "role": "game-designer",
              "prompt": "Let's create the visual design, user experience, and game feel..."
            }
          ]
        },
        "performance-optimization": {
          "models": ["deepseek-r1-distill-qwen-32b"],
          "flow": [
            {
              "model": "deepseek-r1-distill-qwen-32b",
              "role": "performance-engineer",
              "prompt": "Let's analyze and optimize this game code for performance, memory usage, and frame rate..."
            }
          ]
        },
        "game-bug-fixing": {
          "models": ["deepseek-r1-distill-qwen-32b", "openai/gpt-oss-20b"],
          "flow": [
            {
              "model": "deepseek-r1-distill-qwen-32b",
              "role": "debugger",
              "prompt": "Let's identify and fix the bugs in this game code, focusing on gameplay issues..."
            },
            {
              "model": "openai/gpt-oss-20b",
              "role": "tester",
              "prompt": "Let's create test cases and edge cases to prevent similar gameplay issues..."
            }
          ]
        },
        "game-mechanics-design": {
          "models": ["openai/gpt-oss-20b", "deepseek-r1-distill-qwen-32b"],
          "flow": [
            {
              "model": "openai/gpt-oss-20b",
              "role": "game-designer",
              "prompt": "Let's brainstorm creative game mechanics and player interactions..."
            },
            {
              "model": "deepseek-r1-distill-qwen-32b",
              "role": "implementer",
              "prompt": "Let's implement these game mechanics with clean, performant code..."
            }
          ]
        },
        "multiplayer-networking": {
          "models": ["deepseek-r1-distill-qwen-32b"],
          "flow": [
            {
              "model": "deepseek-r1-distill-qwen-32b",
              "role": "network-engineer",
              "prompt": "Let's design and implement multiplayer networking, synchronization, and anti-cheat systems..."
            }
          ]
        },
        "ai-behavior-design": {
          "models": ["openai/gpt-oss-20b", "deepseek-r1-distill-qwen-32b"],
          "flow": [
            {
              "model": "openai/gpt-oss-20b",
              "role": "ai-designer",
              "prompt": "Let's design engaging AI behaviors and enemy patterns..."
            },
            {
              "model": "deepseek-r1-distill-qwen-32b",
              "role": "ai-programmer",
              "prompt": "Let's implement these AI behaviors with state machines and decision trees..."
            }
          ]
        }
      }
    }
  },
  "gemini": {
    "model": "gemini-2.5-pro",
    "capabilities": [
      "multimodal-analysis",
      "comprehensive-understanding", 
      "cross-domain-knowledge",
      "advanced-reasoning"
    ],
    "integration": {
      "role": "reviewer",
      "use_cases": [
        "architecture-review",
        "security-analysis",
        "performance-optimization",
        "best-practices-validation"
      ]
    }
  }
}


